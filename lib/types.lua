---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by luxizhu.
--- DateTime: 2021/4/7 11:08
---

local ngx = ngx

---
---@class etcd_v3_header
local etcd_v3_header = {
    cluster_id = "14841639068965178418",
    revision = "1644",
    member_id = "10276657743932975437",
    raft_term = "2"
}

---
---@class etcd_v3_node
local etcd_v3_node = {
    create_revision = "2",
    mod_revision = "1642",
    version = "20",
    key = "/apisix/routes/348388866928938607",
    ---@type upstream_t|route_t
    value = {}
}

---
---@class etcd_v2_node
local etcd_v2_node = {
    key = "/apisix/upstreams/348343457934216815",
    ---@type upstream_t|route_t
    value = {},
    createdIndex = 67,
    modifiedIndex = 338
}

---
---@class etcd_v3_body
local etcd_v3_body = {
    header = etcd_v3_header,
    kvs = { etcd_v3_node },
}

---
---@class etcd_v3_res
local etcd_v3_res = {
    headers = {},
    body = etcd_v3_body,
}

---
---@alias error_msg string|nil
---@type error_msg
local error_msg = ""

---
---@class etcd_v3_event_t
local etcd_v3_event_t = {
    type = "DELETE",
    kv = etcd_v3_node
}

---
---@class etcd_v3_watch_t
local etcd_v3_watch_t = {
    header = etcd_v3_header,
    events = { etcd_v3_event_t, }
}

---
---@class etcd_v3_watch_res
local etcd_v3_watch_res = {
    result = etcd_v3_watch_t
}

---
---@alias plugin_conf table
---@class route_t
local route_t = {
    name = "beijing",
    uris = { "/api/test1", },
    methods = { "GET", "POST", },
    hosts = { "*.sjzqtest1.com" },
    desc = "hello11111",
    upstream_id = "348387005614263919",
    ---@type table<string, plugin_conf>
    plugins = {
        ["limit-count"] = {
            count = 10,
            policy = "local",
            key = "remote_addr",
            time_window = 10,
            rejected_code = 503
        }
    },
    vars = {
        { "http_agent", "==", "ios-5.7.0" },
    },
    parent = etcd_v2_node,
}

---
---@alias up_conf upstream_t
---@class upstream_t
local upstream_t = {
    checks = {
        active = {
            host = "abc.com",
            healthy = {
                interval = 3,
                successes = 3
            },
            http_path = "/api/test1",
            unhealthy = {
                interval = 3,
                http_failures = 3
            }
        }
    },
    name = "test",
    type = "roundrobin",
    nodes = {
        { port = 9800, weight = 1, host = "10.101.222.24" },
    },
    timeout = {
        connect = 6000,
        read = 6000,
        send = 6000
    },
    enable_websocket = true,
    pass_host = "",
    upstream_host = "",
    parent = etcd_v2_node,
    retries = 1,
}

---
---@class etcd_upstream_node_t
local etcd_upstream_node_t = {
    key = "/apisix/upstreams/348343457934216815",
    value = upstream_t,
    createdIndex = 67,
    modifiedIndex = 338
}

---
--- balancer.run
---@class etcd_route_node_t
local etcd_route_node_t = {
    key = "/apisix/routes/348343457934216815",
    value = route_t,
    createdIndex = 67,
    modifiedIndex = 338
}

---
---@class etcd_dir_node_t
local etcd_dir_node_t = {
    key = "/apisix/upstreams",
    dir = true,
    modifiedIndex = 2008,
    createdIndex = 3,
    ---@type etcd_v2_node[]
    nodes = {}
}

--- core.config_etcd.readdir
---@class etcd_v2_dir_res
local etcd_v2_dir_res = {
    headers = {},
    body = {
        message = "",
        node = etcd_dir_node_t,
    }
}

--- core.etcd.watch_format
--- core.config_etcd.waitdir
---@class etcd_v2_watch_res
local etcd_v2_watch_res = {
    headers = {
        ["X-Etcd-Index"] = 1111,
    },
    body = {
        message = error_msg,
        action = "delete",
        ---@type etcd_v2_node[]
        node = {  },
    }
}

--- for resty.etcd.v3
---@class resty_etcd_v3_client
local resty_etcd_v3_client = {}

--- resty.etcd.v3.readdir
---@param key string
function resty_etcd_v3_client:readdir(key)
    return etcd_v3_res, error_msg
end

---
--- resty.etcd.v3.watchdir
---@param key string
function resty_etcd_v3_client:watchdir(key)
    return function()
        return etcd_v3_watch_res, error_msg
    end, error_msg
end

---
--- balancer._.new
---@class server_picker_t
local server_picker_t = {
    upstream = upstream_t,
    get = function(ctx)
        return 0
    end,
    after_balance = function(ctx, before_retry)
    end
}

---
--- resty.healthcheck.checker
---@class healthcheck_t
local healthcheck_t = {
    add_target = function(ip, port, hostname, is_healthy, hostheader)
    end,
    report_http_status = function(ip, port, hostname, http_status, check)
    end,
    report_timeout = function(ip, port, hostname, check)
    end,
}

---
--- ngx.ctx.api_ctx
---@field upstream_conf upstream_t
---@field matched_upstream upstream_t
---@field conf_version number
---@field upstream_scheme table
---@field up_checker healthcheck_t
---@field script_obj { access: fun(), log: fun(), balance: fun()}
---@field matched_params table
---@field matched_route etcd_route_node_t
---@field curr_req_matched any
---@field conf_type "route"|"route&service"|"global_rule"|"stream/route"
---@field global_rules config_etcd
---@field conf_version number
---@field conf_id string
---@field route_id string
---@field route_name string
---@field service_id string
---@field service_name string
---@field matched_ssl any
---@field matched_sni any
---@field balancer_try_count number
---@field balancer_server number
---@field curr_req_matched { _host: string, _path: "/api/trade/*"}
---@field server_picker server_picker_t
---@field balancer_ip string @ "127.0.0.1"
---@field balancer_port number @ 9800
---@field pass_host string
---@field upstream_host string
---@field plugins (plugin_t|plugin_conf)[]
---@field var table
---@class api_ctx
local api_ctx = {}

ngx.ctx = {
    api_ctx = api_ctx
}

---
--- config.yaml + config-default.yaml
--- core.config_local.config_data
---@class local_config_data
local local_config_data = {
    apisix = {
        enable_debug = false,
        enable_admin = true,
        enable_admin_cors = true,
        config_center = "etcd",
        enable_server_tokens = true,
        router = {
            http = 'radixtree_uri',
            ssl = 'radixtree_sni',
        },
        delete_uri_tail_slash = false,
        global_rule_skip_internal_api = true,
    },
    discovery = {
        eureka = {
            host = "",
            prefix = "",
            timeout = { connect = 1, send = 1, read = 1 },
        },
        dns = {},
        consul_kv = {
            default_service = "",
            prefix = "",
            skip_keys = {},
        },

    },
    nginx_config = {

    },
    etcd = {
        host = { "http://127.0.0.1:2379" },
        prefix = "/apisix",
        timeout = 30,
    },
    plugins = {
        "api-breaker",
    },
    stream_plugins = {},

}

---插件的阶段函数
---@alias plugin_phase_fun fun(conf: table, ctx: api_ctx)
---


---
---@class api_route_t
local api_route_t = {
    methods = { "GET", "POST" },
    uri = "/apisix/abc",
    handler = function()
    end,
}

---
--- apisix.plugins.*
---@field api fun(): api_route_t[]
---@field check_schema fun(conf): boolean
---@field init fun(): void
---@field destory fun(): void
---@field access plugin_phase_fun
---@field rewrite plugin_phase_fun
---@field balancer plugin_phase_fun
---@field log plugin_phase_fun
---@field header_filter plugin_phase_fun
---@field body_filter plugin_phase_fun
---@class plugin_t
local plugin_t = {
    name = "",
    schema = {},
    version = "",
    priority = 100,
    attr = {},
}


---@alias plugins_list plugin_t[]
---@alias hash_table table<string, number>
---@alias pkg_loaded table<"apisix.plugins._", plugin_t>
---
---
---

---
---@type pkg_loaded
package.loaded = { }