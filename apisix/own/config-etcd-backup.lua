---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by luxizhu.
--- DateTime: 2021/3/16 10:43
--- 将config-etcd备份到本地配置文件apisix.yaml
---

--- core.etcd.get("/routes", true)返回的数据格式
---@class etcd_routes
local etcd_routes = {
    node = {
        nodes = {
            {
                value = {
                    update_time = 1615874685,
                    plugins = { ["example-plugin"] = { i = 2 } },
                    upstream = {
                        nodes = { ["10.101.222.24:9800"] = 1 },
                        pass_host = "pass",
                        scheme = "http",
                        hash_on = "vars",
                        type = "roundrobin"
                    },
                    id = "1",
                    status = 1,
                    priority = 0,
                    uris = { "/api/news20/aaa" },
                    create_time = 1615864918,
                    methods = { "PUT", "GET", "POST" }
                },
                modifiedIndex = 41,
                key = "/apisix/routes/1",
                createdIndex = 8
            }
        },

        dir = true,
        createdIndex = 2,
        key = "/apisix/routes",
        modifiedIndex = 58
    },
    count = "2",
    action = "get",
    header = {
        raft_term = "2",
        cluster_id = "14841639068965178418",
        member_id = "10276657743932975437",
        revision = "59"
    }
}

local ngx = ngx
local ipairs = ipairs
local pairs = pairs
local require = require
local type = type
local core = require("apisix.core")
local yaml_dump = require("apisix.own.yaml-dump")
local config_etcd = require("apisix.core.config_etcd")
local profile = require("apisix.core.profile")
local apisix_yaml_path = profile:yaml_path("apisix")

local _M = {
    version = "1.0.0",
}

local function table_clone(obj)
    local t = {}
    for k, v in pairs(obj) do
        if type(v) == "table" then
            v = table_clone(v)
        end
        t[k] = v
    end
    return t
end

local function etcd_values(items)
    local values = {}
    for i, v in ipairs(items) do
        v = table_clone(v.value)
        values[i] = v
        v.update_time = nil
        v.create_time = nil
        if v.vars and #v.vars == 0 then
            v.vars = nil
        end
    end
    return values
end

local function update_apisix_yaml(premature, pre_mtime)
    if premature then
        return
    end

    local res, err = core.etcd.get("/upstreams", true)
    if not res then
        print("upstreams error:", err)
        return
    end
    if not res.status == 200 then
        print("http status ", res.status)
        return
    end
    local etcd_upstreams = res.body

    local res, err = core.etcd.get("/routes", true)
    if not res then
        print("routes error:", err)
        return
    end
    if not res.status == 200 then
        print("http status ", res.status)
        return
    end

    ---@type etcd_routes
    local etcd_routes = res.body
    local yaml_str = yaml_dump {
        upstreams = etcd_values(etcd_upstreams.node.nodes)
    } .. yaml_dump {
        routes = etcd_values(etcd_routes.node.nodes)
    } .. "\n#END"

    print(yaml_str)
    local _, err = require "apisix.cli.util" .write_file(apisix_yaml_path, yaml_str)
    if err then
        ngx.log(ngx.ERR, err)
    end
end

-- 被apisix.init.init_worker调用
function _M.init_worker()
    if ngx.worker.id() == 0 and core.config == config_etcd then
        ngx.timer.every(6, update_apisix_yaml)
        ngx.log(ngx.DEBUG, "启动定时etcd备份")
    end
end

return _M
